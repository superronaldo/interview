@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@  Normal Interview Q & A  @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

1. Tell me about yourself
First of all, I would like to ask this is full remote position?

I am Josh Kinnear from the United States.

I already read the job description and yeah, it is very important to helps crypto investors manage their risks of investing in crypto assets.
As you know, there are so many hacking and attacks in the Blockchain industry, espcially in DeFi projects cause of smart contract vulnerabilities.
It is very important and serious problem to develop and audit the smart contracts securly.
So after reading the job description, I felt very exciting and interesting that if we make the project to helps crypto investors manage their risks of investing assets in crypto industry.
I believe that it will be a revolution in crypto industry cause many investors really want to reduce the risk of the investment.

Having over 5 years of Blockchain development history, I am confident that I have the enough technical background and experience that your company is looking for, and I believe that I would be a valuable asset to your team.
I am well-versed in these following fields.

- Smart Contract development Language(Solidity, Rust, Go)
I can see the one of the required skill is Solidity and Rust smart contract experience. And yes, I have 5 years of Solidity smart contract development and 3 years of Rust smart contract development.
I used solidity in my previous projects of EVM Blockchains and Rust for Non-EVM in Cosmos Blockchain.

I can see the candidate must have deep understanding of DeFi protocols like AMMs, lending and so on.
My most experienced and confident work part is DeFi projects.
I have already worked in building many Dex and DeFi projects similar to Uniswap, Sushiswap, Pancakeswap, GMX, OlympusDAO, BakedBeans and so on.
- DeFi
 * Dex(AMM - Automated market maker)
 * Yield Farming(Build like GMX, Pancakeswap, Uniswap, OlympusDAO, BakedBeans...)
 * Launchpad(Build like Pinksale, Pandasale)
 * Bridge(Build like Anyswap)

Also, I don't think my NFT expertise is related to this job, so I don't explain about it more.
- NFT
 * NFT Mint(Build like Nouns NFT)
 * NFT Staking
 * NFT Game
 * NFT Marketplace

I use hardhat, remix, ganache to develop and test the smart contracts as well.
I also worked in smart contract auditing including manual code test, unit test, and checking the smart contract using audit tool.
My most of work history was on EVM-Ethereum Virtual Machine Blockchains like Ethereum, BSC, Polygon, Avalanche, Fantom, Arbitrum and so on.
So development on EVM is no problem at all.
I am also familar to Non-EVM Blockchains like Cosmos, Aptos and Sui Blockchain.


I am responsible for designing and implementing new innovative features and application architecture, ensuring high-performance and availability, and managing all blockchain development & technical aspects.
Most of my experience has been in Blockchain field, but I also have enough dapp development experience, especially integrating React front-end with the smart contract using web3 JS library.
I am passionate about creating long-term value for the customers, especially in Blockchain space.
I am also familiar with the various challenges that come with developing blockchain applications, and I have a track record of successfully overcoming these challenges.
I am confident in my ability to develop high-quality and scalable blockchain applications, and I am excited to put my skills to work for your company.
Moving forward, I hope to expand my experience and skills across different fields and I'd like to work with you on the company.


8k~10k
When can I hear back about the next steps of this hiring process?



- Cosmos Ecosystem
 * Establish your own new Blockchain network with Cosmos SDK
 * Build DeFi(Dex, Yield Farming, Lottery, Token, NFT) projects on Juno, Terra...
 * Cosmos SDK development with Go
- Other Blockchain networks
I can build Smart Contract, Dex, DeFi, Token and NFT in following Blockchain networks.
 * Tezos
 * Solana
 * Aptos
- Stable Coin
- Real Estate Tokenization




During the work in the Cosmos Ecosystem, I have gained a deep background in Rust and Golang. First of all, let me explain about my Rust experience.
I have over 3 years of experience in Rust programming lanuage and I think Rust will be the best programming language in the near of future.
Because software built using Rust is safe from memory issues like dangling pointers, buffer overruns and memory leaks. Also, Rust provides ownership and memory safety rules.
I have developed several smart contracts using Rust in the Cosmos Ecosystem with Cosmwasm. The smart contracts are used in several DeFi projects like Dex, Farming and Staking.
So I am proud of I have deep background in developing the smart contracts using Rust.

Go is a high level, open-source programming language that was mainly developed keeping in mind the efficiency of code without compromising on the simplicity and faster compilation time to help develop software applications at a faster pace.
Companies like Google, Apple, Uber are using Golang due to its proven ability of less learning time, faster code development, improved runtime efficiency, reduced bugs, concurrency, garbage collection strategies and so on. 
I have gained the deep background of Go experience during work with the Cosmos SDK.
The Cosmos SDK is an open-source framework for building multi-asset public Proof-of-Stake (PoS) blockchains, like the Cosmos Hub, as well as permissioned Proof-of-Authority (PoA) blockchains.
Blockchains built with the Cosmos SDK are generally referred to as application-specific blockchains.
I have worked in building a new Blockchain project using Cosmos SDK and worked in audit project of already built with Cosmos SDK.
All the source code is built with golang and I have done unit-testing and code checking.
After these project completion, I have gained a lot of experience and background in Golang.


4. What makes you unique?
I have an unusual combination of soft skills that I feel makes me unique.
I’m constantly seeking to improve, learn from my mistakes, and challenge myself. And I’m exceptionally organized in terms of tracking my results, progress, and any trends in my work and output.
So through this, I’m able to find potential learning opportunities and lessons, spot potential problems before they become larger issues, and steadily improve.
I use challenges as a learning experience and try to turn the occasional small mistake into a huge positive, rather than dwelling on it as a negative.
In past projects, my managers often complimented my ability to learn quickly, perform well without needing constant supervision, and remain calm even when something didn’t go my way.
So that’s the unique skill set that I bring to the role.


10. Why do you want to work at our company?
I feel my skills are particularly well-suited to the purpose of your company and I'm confident that I can make an immediate impact on your company.
As you can see my resume, I have deep knowledge and rich experience(5 years) in DeFi Dapp, Token, NFT, DAO, DEX, solidity and Cosmos.
This matches 100% to the role in company.
So I believe I have the type of knowledge to succeed in this role and at the company.


11. What else should we know about you that would make us want to hire you?
For starters, I have all the skills and experience listed in the job description, and I'm confident that I can make an immediate impact on your company.
It's not just my background in leading successful DeFi, Dapp, Token, NFT and Cosmos projects, but also my passion for the Crypto industry that drives me to succeed.
If chosen for this role, I will continue to deliver high-quality work for the continued success of your organization.


17. What are your salary expectations?
Thank you for asking. I feel that an monthly salary between $8,000 and $10,000 is in line with the industry average and reflects my skills and experience level well.
I am, however, flexible and open to hearing about the company's compensation expectations for this position.


18. Do you have any questions for me?

 * What are your short- and long-term goals for a new hire with this job title?
 * Can you describe some of the company’s recent challenges and achievements?
 * What qualities do you look for in a candidate?
 * I've really enjoyed learning more about this opportunity. What are the next steps in the hiring process?
 * Thank you for explaining the role to me in such depth. When might I hear back from you regarding a decision?

 
 19. Apeswap Work history

 - What is Apeswap ?
 ApeSwap is a decentralized exchange on BNB Chain with a mission to “provide accessible financial opportunities for the (crypto) masses through transparency, security, and support.” 
 ApeSwap wants to decentralize traditional finance and create a “fair global economy” with its “sustainable, community-driven DAO.” 
 In practice, this means ApeSwap provides DeFi tools like token swaps, staking, margin trading, lending, providing liquidity, and IDOs.
 ApeSwap strives to provide accessible, secure, and transparent DeFi tools for everyone and promises to commit to that through its DAO governance.
 In total, AweSwap has over 200 partnerships with launchpads, incubators, NFT marketplaces, DeFi protocols, and GameFi companies.

 - How does Apeswap work?
Apeswap offers several DeFi functions on its decentralized exchange. Another function is providing liquidity.
For instance, users can cWonnect their wallets to the ApeSwap DEX and add liquidity to a liquidity pair on the exchange.
They receive LP tokens in return, which they can stake to receive a share of the BANANA token emissions as a reward.
Users can also stake their BANANA in the ApeSwap burning vaults and increase their share of the total BANANA supply.
There is a variety of different trading pairs that users can yield farm on.
Its BANANA farms have special farm multipliers that manage the emitted banana distributed to the farms.
Farms with higher multipliers offer higher BANANA rewards, thereby incentivizing users to provide more liquidity to these pairs.
By staking LP tokens in yield farms, users earn a share of the trading fees and BANANA regards.

- What I worked in this project
I worked in this project as a solidity core developer to build the native token and Farming contract for ApeSwap. I analyse the features of the farming contract and built the architecture what functions should be 
developed in the contract.
It is called MasterApe and it inherits BEP20 standard protocol.
 it represetns the main farm contract which is in charge of distributing BANANA tokens to farmers staking on the ApeSwap protocol.
Liquidity pools are initialized and added as a staking token to the MasterApe contract. This MasterApe contract is also in control of the number of minted BANANA token per block.
As users stake LP and other tokens, the MasterApe distributes them according to the weight of rewards of a specific pool along with an accounts stake in that pool.
If you want to see the contract, I can send you it'a address on BNB chain explorer.
0x5c8D727b265DBAfaba67E050f2f739cAeEB4A6F9
I am proud that I worked in this project as a solidity developer.

- What module did you develop?
I developed 
 * "deposit" module to make users can deposit LP tokens to MasterApe for BANANA token allocation
 * "withdraw" module to make users can withdraw LP tokens from MasterApe
 * "add" module to add new lp to the pool(It is called only Owner).
 * "set" module to update the given pool's BANANA allocation point(It is called only owner).
 * "pendingBanana" module to see pending BANANAs on the front-end. This is view module.
 * "enterStaking" module to stake BANANA token in the BANANA token single pool
 * "leaveStaking" module to withdraw BANANA tokens from staking pool.
 * "emergencyWithdraw" module to withdraw without caring about rewards. emergency only

- What was the challenges during the development of this smart contract?
In fact, given smart contracts are immutable and often responsible for managing large sums of money, one could argue that developing good unit tests for smart contracts
is more important than traditional web and mobile applications.
In support of their launch, I implemented comprehensive test coverage and executed against the bug discovery process.
I had to obtain a healthy understanding of the business logic. The first thing to do is make sure you have a through understanding of your distributed application's business logic.

20. MetaEagleClub work history

Meta Eagle Club by Galyverse is an NFT collection of 12,000 digital art collectibles in the form of 3D, real life-inspired eagles.
This NFT art project has been created by the increasingly successful artist Gal Yosef and curated by Eden Gallery.
Meta Eagle Club, created by 3D artist Gal Yosef, is the collection that started the Galyverse.
Meta Eagle Club members get to enjoy exclusive perks and benefits in the world of luxury & fine art. 
These perks include exclusive events in Eden Galleries around the world, Physical art raffles, Flight experiences, Metaverse and of course the Galypoints system.
I worked in this project as a solidity developer to create NFT smart contract base on the ERC721 protocol.
I made the NFT smart contract name is Meta Eagle Club and symbol is MEC on Ethereum network.
MEC contract is inherited of ERC721 standard protocol.
Contract address is : 0xeb6DffB87315a2BdF4dedf72B993AdC960773A0D
Also, I managed and support the minting process, I mean public sale process.


21. Cosmos work history
XPLA is an open-source blockchain hosting a vibrant ecosystem of decentralized applications (dApps) and top-tier developer tools.
XPLA is based on Tendermint, a popular blockchain engine based on BFT consensus which is robust against double-spend attacks and through IBC and COSMOS SDK, the XPLA blockchain can be easily connected with other various chains and is a developer-friendly chain.
I worked in this project as a Cosmos SDK developer and audit the source code.
Source code is made with Golang so I worked on Golang code unit test and auditing.
So I have knowledge and experience in Golang and Cosmos SDK customization.

22. Gas and Fees

Gas is essential to the Ethereum network. It is the fuel that allows it to operate, in the same way that a car needs gasoline to run.
What is gas?
Gas refers to the unit that measures the amount of computational effort required to execute specific operations on the Ethereum network.
Since each Ethereum transaction requires computational resources to execute, each transaction requires a fee. Gas refers to the fee required to conduct a transaction on Ethereum successfully.
Gas fees are paid in Ethereum's native currency, ether (ETH). Gas prices are denoted in gwei, which itself is a denomination of ETH.

23. What is flash loan
What are flash loans? Flash loans are uncollateralized loans without borrowing limits in which a user borrows funds and returns them in the same transaction.
If the user can't repay the loan before the transaction is completed, a smart contract cancels the transaction and returns the money to the lender.


@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

2. What is your greatest strength?
As a senior Blockchain developer, my greatest strength is attention to detail. I’ve always been detail-oriented in my work, and it’s something I enjoy.
Developing the smart contracts requires very detailed research and detailed coding ability. Because smart contracts should care the project and investors finance.
I saw on your job description that this role involves a lot of detail-oriented work, which is one reason I applied.
In my last work history, I was frequently required to manage 3-4client projects at a time.
Being detail-oriented allowed me to deliver 100% of my projects on-time to our clients.


3. What is your greatest weakness?
Some of my weaknesses? 
Let’s see...
First, I’d say I’m not a very spontaneous person. I prefer to work prepared and according to a well-defined plan. 
This sometimes works to my disadvantage, because it’s impossible to always be prepared. 
Another weakness is that I sometimes take on too many projects at once. This can sometimes hinder the quality of my work. 
This is why I’ve made it a practice to set realistic goals every time I take on a project and share more responsibilities with my colleagues.


5. How do you handle failure?
I have always lived by the maxim that nobody is perfect, so I am relatively comfortable taking responsibility for my shortcomings.
My approach is to figure out what I could change to avoid similar circumstances in the future.

6. How do you handle success?
I cannot answer your question, because I am yet to experience some major success in life.
I’ve graduated from a good university, but is that a success? Many people achieve the same feat every year, all around the world… 
I try to stay humble and do not take the things I’ve achieved so far in life too seriously.
Maybe one day I will achieve something really big, either in my personal or professional life.
Just then I will be able to tell how I handle it. Hopefully I will handle it well…


8. Describe your work style.
My work style is extremely flexible—working on so many different projects requires me to be adaptive.
In general, I try to work on one project at a time, working as quickly and efficiently as possible to achieve the best results.
All of my projects require collaboration, so I use the team environment to check for errors.
I am a perfectionist and a driven worker, and I think my clear communication skills allow me to bring out the best in any team, in any project.

I am extremely dependable. I have rarely missed a day's work, and am known for starting work in early and sleeping late to finish important tasks and achieve results.
This dependability extends to my collaborative work as well. I always meet deadlines and help my teammates to meet theirs as well.
For example, on my last project, a teammate was struggling to complete his assignment for the team,
and I helped late every day that week to help him not only complete his assignment, but exceed our initial estimated turnaround time for the project.


9. Do you work well with other people?
As a Blockchain developer, I often worked with a larger team of professional web developers, designers and marketing experts.
We often worked together to meet deadlines, collaborate on projects and provide feedback.
I believe I work well with others, especially in an environment where the team is supportive with one another.
My strong communication skills, compassion and personal awareness allow me to collaborate and provide feedback while still being aware of my own strengths and shortcomings.
So I can make necessary adjustments to my behavior to become a better team player.

12. How well do you assimilate into a new environment?
I would say that my past experience demonstrates that I adapt quite well to new situations.
I worked in many projects that grew extremely fast. Of course it was not always easy to adapt to changes in your working routine and to help your colleagues through the transition, 
and to learn new skills on the go. But I managed to do it, and can see no reason why I should struggle adapting to changes in my new job.


15. Are you a self-motivator? What motivates you?
Yes, I am a self-motivator.
Working for a big success of the project motivates me to work enthusiasticly.
If the project reachs big success, it means I can get also big success in my work because I am one member of the project team.
To make the project success, to make the customers are satisfied, it motivates me.


16. What are you passionate about?
One area that I’m passionate about is self-development and self-improvement in my skills.
I’m always looking to challenge myself and learn new things and technologies.
I’ve learned great communication skills, listening skills, and problem-solving skills that help me in my day-to-day work but also in my personal life in terms of confidence, communication, etc

7. How do you handle stress and pressure?
I try to react to situations rather than to stress. That way, I can handle the situation without becoming too stressed.
For example, when I deal with an unsatisfied customer, rather than focusing on feeling stressed, I focus on the task at hand. 
I believe my ability to communicate effectively with customers during these moments helps reduce my own stress.
I think it also reduces any stress the customer may feel.

18. Do you have any questions for me?


I've really enjoyed learning more about this opportunity. What are the next steps in the hiring process?

- About the job
 * What are your short- and long-term goals for a new hire with this job title?
 * What does a typical day look like for a person in this position?

- About the company
 * Can you describe some of the company’s recent challenges and achievements?
 * What kind of growth does the company expect to see within the next five years?

- About your qualifications
 * What qualities do you look for in a candidate?
 * Do you have any concerns about my experience or skill set?

- About the next steps
 * I've really enjoyed learning more about this opportunity. What are the next steps in the hiring process?
 * Thank you for explaining the role to me in such depth. When might I hear back from you regarding a decision?


 13. How would your co-workers describe your personality?
 My past coworkers have told me that I am very organized and quite good at time management.
 During one specific project, my team members praised me for developing and sticking to a timeline for all the project's different aspects.
 We ended up completing the project ahead of time, and it went really well! I’d love to have a similar relationship with my team members in this position.

@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@  Blockchain Interview Q & A  @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@


1) Beginner Level

1. Differentiate between Blockchain and Hyperledger.
Blockchain is a decentralized technology of immutable records called blocks, which are secured using cryptography.
Hyperledger is a platform or an organization that allows people to build private Blockchain. Using Blockchain you can build public and private Blockchain whereas with Hyperledger you can only build private Blockchains.
Blockchain is divided into public, private, and consortium Blockchains and Hyperledger is a private Blockchain technology with access to Blockchain data and is limited to predefined users, configurations, and programming.
Blockchain can be used in multiple fields such as business, government, healthcare, etc. 
while Hyperledger is primarily used for enterprise-based solutions. 
Wherever we talk about public Blockchain, it refers to the usage of Blockchain on the internet, and Hyperledger-based Blockchain solutions are solutions meant for usage on the intranet, within an organization.


2. How do you explain Blockchain technology to someone who doesn't know it?
Blockchain technology is a distributed ledger, which stores transaction details in the form of immutable records or non-modifiable records (called blocks) which are secured using cryptography.
Let’s consider the example of a school where Blockchain is similar to a digital report card of a student.
Say, each block contains a student record that has a label (stating the date and time) of when the record was entered.
Neither the teacher nor the student will be able to modify the details of that block or the record of report cards. 
Also, the teacher owns a private key that allows him/her to make new records and the student owns a public key that allows him to view and access the report card at any time. 
So basically, the teacher owns the right to update the record while the student only has the right to view the record.  This method makes the data secure.


3. What is Merkel Tree?
Merkel Tree is a data structure that is used for verifying a block. It is in the form of a binary tree containing cryptographic hashes of each block. 
A Merkle tree is structured similarly to a binary tree where each leaf node is a hash of a block of transactional data and each non-leaf node is a hash of its leaf node.
The Merkel root or hash root is the final hash root of all the transaction hashes. It encompasses all the transactions that are underlying all the non-leaf nodes.


4. What do you mean by blocks in Blockchain technology?
Blockchain is a distributed database of immutable records called blocks, which are secured using cryptography. Refer to the video to see the various attributes of a block.
There are a previous hash, transaction details, nonce, and target hash value. A block is like a record of the transaction.
Each time a block is verified, it gets recorded in chronological order in the main Blockchain. Once the data is recorded, it cannot be modified.


5. How is Blockchain distributed ledger different from a traditional ledger?
A Blockchain distributed ledger is highly transparent as compared to a traditional ledger.
Blockchain distributed ledgers are irreversible. Information registered on a distributed ledger cannot be modified whereas on a traditional ledger it is reversible.
A distributed ledger is more secure. It uses cryptography and every transaction is hashed and recorded whereas in traditional ledger security can be compromised.
In a distributed ledger, there is no central authority. It is a distributed system and the participants hold the authority to maintain the sanity of the network and are responsible for validating the transactions. Traditional ledgers are based on the concept of centralized control, which controls all transactions.
In a distributed ledger, identities are unknown and hidden whereas in traditional ledger identities of all participants have to be known before the transactions happen.
In a distributed ledger, there is no single point of failure as the data is distributed and information is shared across multiple nodes. If one node fails, the other nodes carry the same copy of the information. In comparison, traditional ledgers have a single point of failure. If a single system crashes, the entire network comes to a standstill.
In a distributed ledger, data modification or change cannot be done but for a traditional ledger, it is possible.
In a distributed ledger, validation is done by the participants in the network while in a traditional ledger, validation is done by a centralized authority.
The copy of the ledger is shared amongst participants in a distributed ledger while in a traditional ledger, a single copy is maintained in a centralized location. It is not shared amongst the participants.


6. How can you identify a block?
Every block consists of four fields -
The hash value of the previous block (thereby getting linked in a blockchain)
It contains details of several transaction data
It has a value called the nonce. The nonce is a random value which is used to vary the value of the hash in order to generate hash value less than the target
Hash of the block itself. It is the digital signature of the block and an alphanumeric value used to identify a block
The hash address is the unique identification of the block. It is a hex value of 64 characters that have both letters and digits. It is obtained by using the SHA - 256 algorithms.
Refer to the video to see how a block is structured. The hash of the previous block, transaction data, and the nonce consolidate the header of the block. They are together passed through a hashing function and then the hash value is generated.


7. What is cryptography? What is its role in Blockchain?
Blockchain uses cryptography to secure users’ identities and ensure transactions are done safely with a hash function.
Cryptography uses public and private keys in order to encrypt and decrypt data.
In the Blockchain network, a public key can be shared with all the Bitcoin users but a private key (just like a password) is kept secret with the users.
Blockchain uses SHA - 256 which is secure and provides a unique hash output for every input.
The basic feature of this algorithm is whatever input you pass, it will give you a standard alphanumeric output of 64 characters.
It is a one-way function from which you can derive an encrypted value from the input, but not vice-versa.


8. What are the different types of Blockchain?
There are three different types of Blockchain - Public, Private, and Consortium Blockchain.
Public Blockchain ledgers are visible to all the users on the internet and any user can verify and add a block of transactions to the Blockchain. Examples, Bitcoin, and Ethereum.
Private Blockchain ledgers are visible to users on the internet but only specific users in the organization can verify and add transactions. It’s a permissioned blockchain, although the information is available publicly, the controllers of the information are within the organization and are predetermined. Example, Blockstack.
In Consortium Blockchain, the consensus process is controlled by only specific nodes. However, ledgers are visible to all participants in the consortium Blockchain. Example, Ripple.

9. What happens when you try to deploy a file with multiple contracts?
In Blockchain, deploying a file with multiple contracts is not possible. The compiler only deploys the last contract from the uploaded file and the remaining contracts are neglected.

10. What is a Genesis Block?
The genesis block is the first block in the Blockchain which is also known as block 0
In Blockchain, it is the only block that doesn’t refer to its previous block.
It defines the parameters of the Blockchain such as, level of difficulty, consensus mechanism etc. to mine blocks


2) Intermediate Level

11. How is the hash (Block signature) generated?
The process of generating a block signature involves:
* Passing transaction details through a one-way hash function i.e., SHA-256.
* Running the output value through a signature algorithm (like ECDSA) with the user’s private key.
* Following these steps, the encrypted hash, along with other information (such as the hashing algorithm), is called the digital signature.


12. List down some of the extensively used cryptographic algorithms.
Here are a few popular algorithms:
* SHA - 256
* RSA (Rivest-Shamir-Adleman)
* Triple DES
* Ethash
* Blowfish


13. What is a smart contract and list some of its applications?
Smart contracts are self-executing contracts which contain the terms and conditions of an agreement between the peers
Some of the applications are:
Transportations: Shipment of goods can be easily tracked using smart contracts
Protecting copyrighted content: Smart contracts can protect ownership rights such as music or books
Insurance: Smart contracts can identify false claims and prevent forgeries
Employment contract: Smart contracts can be helpful to facilitate wage payments


14. What is the Ethereum network and how many Ethereum networks are you familiar with?
Ethereum is a blockchain-based distributed computing platform featuring smart contract functionality that enables users to create and deploy their decentralized applications
There are three types of networks in Ethereum:
* Live network (main network) - Smart contracts are deployed on the main network
* Test network (like Ropsten, Kovan, Rinkeby) - Allow users to run their smart contracts with no fees before deploying it on the main network  
* Private network - Are those which are not connected to the main network. They run within the premises of the organization but carry the features of an Ethereum network.


15. Where do nodes run a smart contract code? 
Nodes run smart contracts code on Ethereum Virtual Machine (EVM). It is a virtual machine designed to operate as a runtime environment for Ethereum-based smart contracts.
EVM is operated in a sandboxed environment (isolated from the main network). This is a perfect testing environment.
You can download the EVM, run your smart contract locally in an isolated manner and once you have tested and verified it, you can deploy it on the main network.


16. What is a Dapp and how is it different from a normal application? 
Dapp:
* A Dapp is a decentralized application which is deployed using smart contract
* A Dapp has its back-end code (smart contract) which runs on a decentralized peer-to-peer network
* Process:
    * Front-end
    * Smart contract (backend code)
    * Blockchain (P2P contract)

Normal application:
* Normal application has a back-end code which runs on a centralized server
* It’s a computer software application that is hosted on a central server
* Process:
    * Front-end
    * API
    * Database (runs on the server)


17. Name some leading open source platforms for developing Blockchain applications.
* Ethereum is one of the popular platforms for building Blockchain-based applications
* Eris is used for building enterprise-based solutions
Some of the other widely used platforms for building Blockchain include Hyperledger, Multichain, Open chain.


18. What is the very first thing you must specify in a Solidity file?
It is necessary to specify the version number of Solidity at the beginning of code as it eliminates incompatibility errors that can arise while compiling with another version. This is a mandatory clause that has to be there at the top of any Solidity code you write. You also need to mention the correct version number for the code.
Related Reading: What is Solidity Programming, its Data Types, Smart Contracts, and EVM in Ethereum?


19. What is the nonce and how is it used in mining?
In Blockchain, mining is a process to validate transactions by solving a difficult mathematical puzzle called proof of work.
Now, proof of work is the process to determine a number (nonce) along with a cryptographic hash algorithm to produce a hash value lower than a predefined target.
The nonce is a random value that is used to vary the value of hash so that the final hash value meets the hash conditions.


3) Expert Level

20. Name the steps that are involved in the Blockchain project implementation.
Requirement identification:
* Identify the problem and goal
* Identify the most suitable consensus mechanism
* Identify the most suitable platform
* Account for implementation and deployment costs

Planning stage
* In this stage and individual evaluates all requirements and decides a suitable blockchain platform to be implemented.

Development and implementation of a project
* Designing the architecture
* Designing the user interface
* Building the APIs

Controlling and monitoring the project
* Applying Proof of Concept (POC)
* Identifying and fixing issues


21. Explain a real-life use-case where Blockchain is being used.
In supply chain management, smart contracts provide permanent transparency and validation of transactions shared by multiple supply chain partners.
Check out our diagrammatic display of supply chain management using Blockchain in our video.

22. List and explain the parts of EVM memory.
The memory of an EVM is divided into three types:

Storage:
* Storage values are stored permanently on the Blockchain network
* It is extremely expensive

Memory:
* Memory is a temporary modifiable storage
* It can be accessed only during contract execution. Once the execution is finished, its data is lost

Stack:
* A stack is temporary and non-modifiable storage.
* Here, when the execution completes, the content is lost.


23. What happens if the execution of a smart contract costs more than the specified gas?
Initially, your transaction will be executed, but if the execution of a smart contract costs more than the specified gas, then the miners will stop validating your contract. 
The Blockchain will record the transaction as failed, also the user doesn’t get a refund.


24. What does the gas usage in a transaction depend on and how is the transaction fee calculated?
Gas usage depends upon the amount of storage and set of instructions (codes) used in a smart contract. The transaction fee is calculated in Ether, which is given as:
Ether = Tx Fees = Gas Limit * Gas Price


25. What is the fork? What are some of the types of forking?
In simple terms, updating a cryptocurrency protocol or code is called forking. Fork implies that a Blockchain splits into two branches. 
It can happen when the participants of the network cannot come to an agreement with regards to the consensus algorithm and new rules to validate transactions.

There are three types of forking:
* Hard forks
* Soft forks
* Accidental forks


26. Differentiate between Proof of Work vs Proof of Stake.
Proof of Work (PoW):
In Blockchain, PoW is the process of solving a complex mathematical puzzle called mining. 
Here, the probability of mining a block is based upon the amount of computational work done by a miner.
Miners spend a lot of computing power (with hardware) for solving the cryptographic puzzle.

Proof of Stake (PoS):
PoS is an alternative to PoW in which the Blockchain aims to achieve distributed consensus. The probability of validating a block relies upon the number of tokens you own.
The more tokens you have, the more chances you get to validate a block. It was created as a solution to minimize the use of expensive resources spent in mining.


27. What is a 51% attack?
In Blockchain, a 51% attack refers to a vulnerability where an individual or group of people controls the majority of the mining power (hash rate).
This allows attackers to prevent new transactions from being confirmed. Further, they can double-spend the coins.
In a 51% attack, smaller cryptocurrencies are being attacked.


28. What are function modifiers in Solidity? Mention the most widely used modifiers.
In Solidity, function modifiers are used to easily modify the behavior of your smart contract functions.
In simple terms, it can build additional features or apply restrictions on the function of smart contracts.
The most extensively used function modifiers in solidity are: 

* View, which are functions that cannot modify the state of a smart contract. They are read-only functions. Refer to our video to see an example of a View function
* Pure, which are functions that neither read nor write the state of a smart contract. They return the same result determined by its input values. 
Refer to our video to see an example of a Pure function